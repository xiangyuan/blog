<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Recent Blog Posts</title>
  <id>http://blog.dbrgn.ch/feed.atom</id>
  <updated>2013-06-18T00:00:00Z</updated>
  <link href="http://blog.dbrgn.ch/" />
  <link href="http://blog.dbrgn.ch/feed.atom" rel="self" />
  <subtitle type="text">Recent blog posts</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="http://blog.dbrgn.ch/feed.atom">
    <title type="text">Heroku Buildpack for Numpy, Scipy and Scikit-Learn</title>
    <id>http://blog.dbrgn.ch/2013/6/18/heroku-buildpack-numpy-scipy-scikit-learn</id>
    <updated>2013-06-18T00:00:00Z</updated>
    <link href="http://blog.dbrgn.ch/2013/6/18/heroku-buildpack-numpy-scipy-scikit-learn" />
    <author>
      <name>Danilo Bargen</name>
    </author>
    <content type="html">&lt;p&gt;(TLDR: &lt;a class="reference external" href="https://github.com/dbrgn/heroku-buildpack-python-sklearn"&gt;https://github.com/dbrgn/heroku-buildpack-python-sklearn&lt;/a&gt;)&lt;/p&gt;
&lt;div class="section" id="background"&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;At &lt;a class="reference external" href="https://www.webrepublic.ch/"&gt;Webrepublic&lt;/a&gt; we just launched a Python based system that among other things
does comparison of large texts using tf-idf vectors in a multi-dimensional
vector space and measuring the cosine similarity between them (see
&lt;a class="reference external" href="http://stackoverflow.com/a/8897648/284318"&gt;http://stackoverflow.com/a/8897648/284318&lt;/a&gt;). For this, we needed &lt;a class="reference external" href="http://scikit-learn.org/stable/"&gt;scikit-learn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During the deployment process, I discovered that &lt;em&gt;one does not simply deploy
scikit-learn on Heroku&lt;/em&gt;. There were different issues with it. First of all,
Scipy needs Numpy to be available at &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; parse time. If you just
install Numpy and Scipy using requirements.txt, Numpy won't yet be installed at
the time the Scipy &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; is processed. (Note that this has been fixed in
&lt;a class="reference external" href="https://github.com/scipy/scipy/pull/453"&gt;current versions of Scipy&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Another issue was that a Fortran compiler and different libraries are needed to
build Scipy, all of which are not available on Heroku.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="problem-solving-attempts"&gt;
&lt;h2&gt;Problem Solving Attempts&lt;/h2&gt;
&lt;p&gt;The first thing I found while looking for a solution was
&lt;a class="reference external" href="https://github.com/wyn/heroku-buildpack-python"&gt;wyn/heroku-buildpack-python&lt;/a&gt;, but I couldn't quite get it to work. The second
thing I found was &lt;a class="reference external" href="https://github.com/ToonTimbermont/heroku-buildpack-python"&gt;ToonTimbermont/heroku-buildpack-python&lt;/a&gt;, a fork of wyn's
fork that solves some of the issues.&lt;/p&gt;
&lt;p&gt;(I also played around with Kenneth Reitz's &lt;a class="reference external" href="https://github.com/kennethreitz/anaconda-buildpack"&gt;anaconda buildpack&lt;/a&gt;, but didn't
really get it to work the way I wanted it.)&lt;/p&gt;
&lt;p&gt;By combining the work of both developers, using the &lt;a class="reference external" href="https://github.com/wyn/npscipy-binaries"&gt;precompiled binaries by
wyn&lt;/a&gt; and adding some code I managed to rebase all the changes on top of
Heroku's current buildpack. This solves some issues/bugs with older versions of
Pip.&lt;/p&gt;
&lt;p&gt;Another change I made was that the dependencies can be stated in
&lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; as usual, instead of requiring a &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; file.&lt;/p&gt;
&lt;p&gt;You can find the buildpack at
&lt;a class="reference external" href="https://github.com/dbrgn/heroku-buildpack-python-sklearn"&gt;https://github.com/dbrgn/heroku-buildpack-python-sklearn&lt;/a&gt;. All the changes
against the official Heroku buildpack have been condensed in a &lt;a class="reference external" href="https://github.com/dbrgn/heroku-buildpack-python-sklearn/commit/87cf7b24a358b916deaf26b784ea95be42590efe"&gt;single commit&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;The process to use the buildpack is as straightforward as with any other
buildpack. For a new app:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
heroku create --buildpack https://github.com/dbrgn/heroku-buildpack-python-sklearn/
&lt;/pre&gt;
&lt;p&gt;For an existing app:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
heroku config:set BUILDPACK_URL=https://github.com/dbrgn/heroku-buildpack-python-sklearn/
&lt;/pre&gt;
&lt;p&gt;If you have any questions or problems, feel free to leave a comment or &lt;a class="reference external" href="https://github.com/dbrgn/heroku-buildpack-python-sklearn/issues"&gt;open an
issue on Github&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>

